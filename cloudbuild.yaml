# https://cloud.google.com/architecture/managing-infrastructure-as-code

# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "************************"

- id: 'Infra Tf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "gke/kubernetes-cluster/$BRANCH_NAME/" ]; then
        echo "$BRANCH_NAME"
        cd gke/kubernetes-cluster/$BRANCH_NAME
        terraform init
      else
        for dir in gke/kubernetes-cluster
        do 
          echo ${dir}
          cd ${dir}   
          env=${dir%/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../../
        done
      fi 

# [START tf-plan]
- id: 'Infra Tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "gke/kubernetes-cluster/$BRANCH_NAME/" ]; then
        cd gke/kubernetes-cluster/$BRANCH_NAME
        terraform plan
      else
        for dir in gke/kubernetes-cluster
        do 
          cd ${dir}   
          env=${dir%/}
          env=${env#/}  
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform plan || exit 1
          cd ../../../
        done
      fi 
# [END tf-plan]

# [START tf-apply]
- id: 'Infra Tf apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "gke/kubernetes-cluster/$BRANCH_NAME/" ]; then
        cd gke/kubernetes-cluster/$BRANCH_NAME      
        terraform apply -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an official environment."
        echo "*******************************************************************************"
      fi
# [END tf-apply]
- id: 'Build ibgateway ibc'
  name: 'gcr.io/cloud-builders/docker'  
  args: [ 'build', '-t', 'eu.gcr.io/$PROJECT_ID/ibc:latest',"./gke/ib-gateway/ibc"]



# [END build ibgateway ibc]
- id: 'Build ib-gateway-healthcheck'
  name: 'gcr.io/cloud-builders/docker'  
  args: [ 'build', '-t', 'eu.gcr.io/$PROJECT_ID/ib-gateway-healthcheck:latest',"./gke/ib-gateway/healthcheck"]

# CONFIGURE A TEMPORARY PROXY TO DEPLOY DEPLOYMENTS 
- id: 'Temp proxy bastion host for Cloud Build'
  name: gcr.io/cloud-builders/gcloud
  entrypoint: sh
  args:
  - -c
  - gcloud container clusters get-credentials ib-trading--$BRANCH_NAME  --region europe-southwest1-a
    gcloud compute ssh bastion-host-$BRANCH_NAME --tunnel-through-iap   --project=api-project-786272790820  --zone=europe-southwest1-a '--' -L8888:localhost:8888

# Configure a kubectl workspace for this project
- id: 'Deploy into cluster  ibgateway ibc'
  name: gcr.io/cloud-builders/kubectl
  entrypoint: sh
  args:
  - -c
  - export HTTPS_PROXY=localhost:8888 
    kubectl apply -f ./gke/ib-gateway/ib-gateway.yaml

#- id: 'Configure a kubectl'
#- name: eu.gcr.io/cloud-builders/kubectl
#  args:
#    - cluster-info
#  env:
#    - CLOUDSDK_COMPUTE_REGION=$_CUSTOM_REGION
#    - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
#    - KUBECONFIG=/workspace/.kube/config

# Deploy with Helm 
#- id: 'deploy with Helm'
#- name: eu.gcr.io/$PROJECT_ID/helm
#  args:
#    - upgrade
#    - -i
#    - my-app
#    - ./kubernetes
#    - --set
#    - image.repository=eu.gcr.io/$PROJECT_ID/ibc:latest
#    - -f
#    - ./kubernetes/values.yaml
#  env:
#    - KUBECONFIG=/workspace/.kube/config
#    - TILLERLESS=false
#    - TILLER_NAMESPACE=kube-system

images: [eu.gcr.io/$PROJECT_ID/ibc:latest,eu.gcr.io/$PROJECT_ID/ib-gateway-healthcheck:latest]  

options:
  logging: CLOUD_LOGGING_ONLY
# substitutions:
#   _CUSTOM_REGION: europe-southwest-1
#   _CUSTOM_CLUSTER: ib-trading-$BRANCH_NAME  